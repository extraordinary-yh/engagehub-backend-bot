# Generated by Django 4.2.23 on 2025-09-16 22:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0017_add_resource_submission_indexes'),
    ]

    operations = [
        migrations.CreateModel(
            name='LinkedInSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_description', models.TextField(blank=True, default='User claims to have posted a LinkedIn update')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('points_awarded', models.IntegerField(default=0)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_linkedin', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linkedin_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'linkedin_submissions',
                'ordering': ['-submitted_at'],
                'indexes': [models.Index(fields=['status', '-submitted_at'], name='idx_linkedin_status_submitted'), models.Index(fields=['user', 'status'], name='idx_linkedin_user_status')],
            },
        ),
        migrations.CreateModel(
            name='EventSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(blank=True, default='Event Attendance', max_length=200)),
                ('description', models.TextField(blank=True, default='User claims to have attended an event')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('points_awarded', models.IntegerField(default=0)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'event_submissions',
                'ordering': ['-submitted_at'],
                'indexes': [models.Index(fields=['status', '-submitted_at'], name='idx_event_status_submitted'), models.Index(fields=['user', 'status'], name='idx_event_user_status')],
            },
        ),
    ]
