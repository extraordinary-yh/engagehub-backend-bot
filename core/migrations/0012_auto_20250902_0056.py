# Generated by Django 4.2.23 on 2025-09-02 00:56

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0011_allow_manual_timestamp'),
    ]

    operations = [
        # CRITICAL PERFORMANCE INDEXES
        # Based on BACKEND_OPTIMIZATION_URGENT.md analysis
        # Expected improvement: 1100ms â†’ 50ms (22x faster)
        
        migrations.RunSQL(
            # Add composite index for user-specific points logs ordered by timestamp
            sql="CREATE INDEX IF NOT EXISTS idx_points_logs_user_timestamp ON points_log(user_id, timestamp DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_points_logs_user_timestamp;"
        ),
        
        migrations.RunSQL(
            # Add index for user + activity filtering
            sql="CREATE INDEX IF NOT EXISTS idx_points_logs_user_activity ON points_log(user_id, activity_id);",
            reverse_sql="DROP INDEX IF EXISTS idx_points_logs_user_activity;"
        ),
        
        migrations.RunSQL(
            # Add composite index for user-specific redemptions ordered by date
            sql="CREATE INDEX IF NOT EXISTS idx_redemptions_user_timestamp ON redemptions(user_id, redeemed_at DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_redemptions_user_timestamp;"
        ),
        
        migrations.RunSQL(
            # Add index for user lookup optimization
            sql="CREATE INDEX IF NOT EXISTS idx_points_logs_timestamp ON points_log(timestamp DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_points_logs_timestamp;"
        ),
        
        migrations.RunSQL(
            # Add index for redemption timestamp queries
            sql="CREATE INDEX IF NOT EXISTS idx_redemptions_timestamp ON redemptions(redeemed_at DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_redemptions_timestamp;"
        ),
    ]
