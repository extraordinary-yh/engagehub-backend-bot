# Generated by Django 4.2.23 on 2025-09-18 05:57

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0018_add_event_linkedin_submissions"),
    ]

    operations = [
        migrations.CreateModel(
            name="DiscordEventLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("message", "Message Sent"),
                            ("reaction_add", "Reaction Added"),
                            ("voice_join", "Voice Channel Join"),
                        ],
                        help_text="The type of event that occurred.",
                        max_length=20,
                    ),
                ),
                (
                    "user_id",
                    models.CharField(
                        help_text="Discord user ID of the user who triggered the event.",
                        max_length=50,
                    ),
                ),
                (
                    "channel_id",
                    models.CharField(
                        blank=True,
                        help_text="Discord channel ID where the event occurred.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "message_id",
                    models.CharField(
                        blank=True,
                        help_text="Discord message ID relevant to the event.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "emoji",
                    models.CharField(
                        blank=True,
                        help_text="Emoji used in a reaction.",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp of when the event was logged.",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="Additional context for the event (e.g., message content).",
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "discord_event_logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["event_type", "timestamp"],
                        name="discord_eve_event_t_87dbd6_idx",
                    ),
                    models.Index(
                        fields=["user_id"], name="discord_eve_user_id_194207_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PartnerMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        help_text="The date for which these metrics are calculated.",
                        unique=True,
                    ),
                ),
                (
                    "total_active_users",
                    models.IntegerField(
                        default=0,
                        help_text="Total unique users who performed any action.",
                    ),
                ),
                (
                    "total_messages_sent",
                    models.IntegerField(
                        default=0, help_text="Total number of messages sent by users."
                    ),
                ),
                (
                    "brand_mentions_company_a",
                    models.IntegerField(default=0, help_text="Mentions of 'AcmeCorp'."),
                ),
                (
                    "event_attendees_company_a",
                    models.IntegerField(
                        default=0, help_text="Attendees for company A's events."
                    ),
                ),
                (
                    "engaged_students",
                    models.IntegerField(
                        default=0, help_text="Students showing high engagement."
                    ),
                ),
                (
                    "resume_ready_students",
                    models.IntegerField(
                        default=0, help_text="Students who have uploaded resumes."
                    ),
                ),
                (
                    "interview_prepped_students",
                    models.IntegerField(
                        default=0,
                        help_text="Students who have participated in interview prep.",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Partner Metrics",
                "db_table": "partner_metrics",
                "ordering": ["-date"],
            },
        ),
    ]
